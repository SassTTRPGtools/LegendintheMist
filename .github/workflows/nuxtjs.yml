# Sample workflow for building and deploying a Nuxt site to GitHub Pages
#
# To get started with Nuxt see: https://nuxtjs.org/docs/get-started/installation
#
name: Deploy Nuxt site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"
      - name: Install dependencies
        run: npm ci --prefer-offline
      - name: Build Nuxt
        run: |
          echo "Building Nuxt project..."
          npm run build
          
          echo "Checking build output..."
          ls -la .nuxt/dist/client/
          
          echo "Creating output directory..."
          mkdir -p .output/public
          
          echo "Copying client files to output..."
          cp -r .nuxt/dist/client/* .output/public/
          
          echo "Copying public files..."
          if [ -d "public" ]; then
            cp -r public/* .output/public/
          fi
          
          echo "Verifying _nuxt directory..."
          ls -la .output/public/_nuxt/
          
          echo "Creating index.html..."
          # Find the main JS and CSS files
          MAIN_JS=$(find .output/public/_nuxt -name "*.js" -exec ls -la {} \; | sort -k5 -nr | head -1 | awk '{print $9}')
          MAIN_CSS=$(find .output/public/_nuxt -name "*.css" -exec ls -la {} \; | sort -k5 -nr | head -1 | awk '{print $9}')
          
          if [ -n "$MAIN_JS" ] && [ -n "$MAIN_CSS" ]; then
            JS_NAME=$(basename "$MAIN_JS")
            CSS_NAME=$(basename "$MAIN_CSS")
            
            echo "Main files found: JS=$JS_NAME, CSS=$CSS_NAME"
            
            cat > .output/public/index.html << EOF
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="utf-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <title>Legend in the Mist</title>
              <link rel="icon" type="image/x-icon" href="/LegendintheMist/favicon.ico">
              <link rel="stylesheet" href="/LegendintheMist/_nuxt/$CSS_NAME">
          </head>
          <body>
              <div id="__nuxt"></div>
              <script type="module" src="/LegendintheMist/_nuxt/$JS_NAME"></script>
          </body>
          </html>
          EOF
          else
            echo "Warning: Could not find main JS or CSS files"
            echo "Available files:"
            find .output/public -type f | head -20
          fi
          
          echo "Final verification:"
          echo "Files in .output/public:"
          find .output/public -type f | head -20
      - name: Add .nojekyll
        run: |
          touch .output/public/.nojekyll
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: .output/public

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
